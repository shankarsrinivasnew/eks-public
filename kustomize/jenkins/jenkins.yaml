---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: jenkins
spec:
  releaseName: jenkins
  chart:
    repository: https://charts.jenkins.io
    name: jenkins
    version: 2.6.4
  values:
    master:
      image: jenkins/jenkins
      tag: lts-alpine
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: alb
          alb.ingress.kubernetes.io/scheme: internal
          alb.ingress.kubernetes.io/target-type: ip
          alb.ingress.kubernetes.io/inbound-cidrs: "{{ VPC_CIDR }},10.161.52.0/22,10.161.56.0/22,10.161.60.0/22"
          external-dns.alpha.kubernetes.io/hostname: jenkins.{{ DNS_ZONE }}
      resources:
        limits:
          cpu: 500m
      # Environment variables that get added to the init container (useful for e.g. http_proxy)
      initContainerEnv:
        - name: http_proxy
          value: http://eu-west-2.proxy.aws.uk.tsb:3128
        - name: https_proxy
          value: http://eu-west-2.proxy.aws.uk.tsb:3128
        - name: no_proxy
          value: localhost,127.0.0.1,169.254.169.254,10.0.0.0/8,172.20.0.0/16,.internal,.eu-west-2.elb.amazonaws.com,vault.service.consul,ssm.eu-west-2.amazonaws.com,ssmmessages.eu-west-2.amazonaws.com,ec2.eu-west-2.amazonaws.com,ec2messages.eu-west-2.amazonaws.com,s3.eu-west-2.amazonaws.com,autoscaling.eu-west-2.amazonaws.com,secretsmanager.eu-west-2.amazonaws.com,kms.eu-west-2.amazonaws.com,ecr.eu-west-2.amazonaws.com,.eks.amazonaws.com,.ecr.eu-west-2.amazonaws.com,.s3.eu-west-2.amazonaws.com,.cluster.local,.aws.uk.tsb
      containerEnv:
        - name: http_proxy
          value: http://eu-west-2.proxy.aws.uk.tsb:3128
        - name: https_proxy
          value: http://eu-west-2.proxy.aws.uk.tsb:3128
        - name: no_proxy
          value: localhost,127.0.0.1,169.254.169.254,10.0.0.0/8,172.20.0.0/16,.internal,.eu-west-2.elb.amazonaws.com,vault.service.consul,ssm.eu-west-2.amazonaws.com,ssmmessages.eu-west-2.amazonaws.com,ec2.eu-west-2.amazonaws.com,ec2messages.eu-west-2.amazonaws.com,s3.eu-west-2.amazonaws.com,autoscaling.eu-west-2.amazonaws.com,secretsmanager.eu-west-2.amazonaws.com,kms.eu-west-2.amazonaws.com,ecr.eu-west-2.amazonaws.com,.eks.amazonaws.com,.ecr.eu-west-2.amazonaws.com,.s3.eu-west-2.amazonaws.com,.cluster.local,.aws.uk.tsb
      installPlugins:
        - kubernetes:1.26.4
        - workflow-job:2.39
        - workflow-aggregator:2.6
        - workflow-durable-task-step:2.35
        - credentials-binding:1.23
        - git:4.3.0
        - configuration-as-code:1.43
        - ansicolor:0.7.2
        - pipeline-aws:1.42
        - authorize-project:1.3.0
        - aws-global-configuration:1.5
        - command-launcher:1.4
        - custom-tools-plugin:0.7
        - docker-plugin:1.2.0 
        - envinject:2.3.0
        - extra-tool-installers:1.0
        - git-parameter:0.9.12
        - github-branch-source:2.8.3
        - http_request:1.8.26
        - job-dsl:1.77
        - matrix-auth:2.6.2
        - jdk-tool:1.4
        - pipeline-utility-steps:2.6.1
        - pipeline-github:2.7
        - scm-filter-branch-pr:0.5.1
        - ws-cleanup:0.38
        - role-strategy:3.0
        - slack:2.41
      JCasC:
        configScripts:
          github: |-
            unclassified:
              gitHubPluginConfig:
                hookUrl: "http://jenkins.{{ DNS_ZONE }}/github-webhook/"
                configs:
                  - name: "GitHub"
                    credentialsId: "github"
                    manageHooks: true
          libraries: |-
            unclassified:
              globalLibraries:
                libraries:
                  - name: "rax-jenkins-shared-library"
                    defaultVersion: "develop"
                    retriever:
                      modernSCM:
                        scm:
                          github:
                            credentialsId: "github-job"
                            repoOwner: "TSB-Bank"
                            repository: "rax-jenkins-shared-library"
                            traits:
                              - gitHubBranchDiscovery:
                                  strategyId: 1
                              - gitHubPullRequestDiscovery:
                                  strategyId: 1
                              - gitHubForkDiscovery:
                                  strategyId: 1
                                  trust: "gitHubTrustPermissions"
          proxy: |-
            jenkins:
              proxy:
                name: "eu-west-2.proxy.aws.uk.tsb"
                port: 3128
                noProxyHost: "localhost,127.0.0.1,169.254.169.254,10.0.0.0/8,172.20.0.0/16,.internal,.eu-west-2.elb.amazonaws.com,vault.service.consul,ssm.eu-west-2.amazonaws.com,ssmmessages.eu-west-2.amazonaws.com,ec2.eu-west-2.amazonaws.com,ec2messages.eu-west-2.amazonaws.com,s3.eu-west-2.amazonaws.com,autoscaling.eu-west-2.amazonaws.com,secretsmanager.eu-west-2.amazonaws.com,kms.eu-west-2.amazonaws.com,ecr.eu-west-2.amazonaws.com,.eks.amazonaws.com,.ecr.eu-west-2.amazonaws.com,.s3.eu-west-2.amazonaws.com,.cluster.local,.aws.uk.tsb"
          tools: |-
            tool:
              customTool:
                installations:
                  - name: "pip"
                    properties:
                      - installSource:
                          installers:
                            - command:
                                command: |-
                                  curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
                                  python get-pip.py
                                toolHome: "/home/jenkins/.local/bin"
                  - name: "ansible"
                    properties:
                      - installSource:
                          installers:
                            - command:
                                command: |-
                                  curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
                                  python get-pip.py
                                  /home/jenkins/.local/bin/pip install --user ansible
                                toolHome: "/home/jenkins/.local/bin"
                  - name: "aws"
                    properties:
                      - installSource:
                          installers:
                            - command:
                                command: |-
                                  curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
                                  python get-pip.py
                                  curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscli.zip
                                  unzip awscli.zip
                                  /home/jenkins/.local/bin/pip install botocore boto3
                                toolHome: "aws/dist"
                  - name: "packer"
                    properties:
                      - installSource:
                          installers:
                            - command:
                                command: |-
                                  curl https://releases.hashicorp.com/packer/1.6.0/packer_1.6.0_linux_amd64.zip -o packer.zip
                                  unzip packer.zip
                                toolHome: "."
                  - name: "terraform"
                    properties:
                      - installSource:
                          installers:
                            - command:
                                command: |-
                                  curl https://releases.hashicorp.com/terraform/0.12.29/terraform_0.12.29_linux_amd64.zip -o terraform.zip
                                  unzip terraform.zip
                                toolHome: "."
          ansicolor: |-
            unclassified:
              ansiColorBuildWrapper:
                globalColorMapName: "xterm"
          authorisation: |-
            jenkins:
              authorizationStrategy:
                roleBased:
                  roles:
                    global:
                      - assignments:
                          - "admin"
                        name: "admin"
                        pattern: ".*"
                        permissions:
                          - "Job/Move"
                          - "Job/Build"
                          - "Lockable Resources/View"
                          - "Credentials/Delete"
                          - "Credentials/ManageDomains"
                          - "Lockable Resources/Unlock"
                          - "View/Create"
                          - "Agent/Configure"
                          - "Job/Read"
                          - "Credentials/Update"
                          - "Agent/Create"
                          - "Job/ExtendedRead"
                          - "Overall/SystemRead"
                          - "Job/Delete"
                          - "Agent/Build"
                          - "View/Configure"
                          - "Lockable Resources/Reserve"
                          - "Agent/Provision"
                          - "SCM/Tag"
                          - "Job/Create"
                          - "Job/Discover"
                          - "Agent/ExtendedRead"
                          - "Credentials/View"
                          - "Agent/Connect"
                          - "Agent/Delete"
                          - "Run/Replay"
                          - "Agent/Disconnect"
                          - "Run/Delete"
                          - "Job/Cancel"
                          - "Overall/Read"
                          - "Run/Update"
                          - "Credentials/Create"
                          - "Overall/Administer"
                          - "View/Delete"
                          - "Job/Configure"
                          - "Job/Workspace"
                          - "View/Read"
      jenkinsUrl: http://jenkins.{{ DNS_ZONE }}
      slaveJenkinsUrl: http://jenkins.jenkins.svc.cluster.local:8080
      slaveJenkinsTunnel: jenkins-agent.jenkins.svc.cluster.local:50000
    agent:
      podTemplates:
        cbinit: |
          - name: cbinit
            label: jenkins-tsb-cb
            namespace: cb
            serviceAccount: jenkins-agent
            hostNetwork: false
            envVars:
              - envVar:
                  key: http_proxy
                  value: http://eu-west-2.proxy.aws.uk.tsb:3128
              - envVar:
                  key: https_proxy
                  value: http://eu-west-2.proxy.aws.uk.tsb:3128
              - envVar:
                  key: no_proxy
                  value: localhost,127.0.0.1,169.254.169.254,10.0.0.0/8,172.20.0.0/16,.internal,.eu-west-2.elb.amazonaws.com,vault.service.consul,ssm.eu-west-2.amazonaws.com,ssmmessages.eu-west-2.amazonaws.com,ec2.eu-west-2.amazonaws.com,ec2messages.eu-west-2.amazonaws.com,s3.eu-west-2.amazonaws.com,autoscaling.eu-west-2.amazonaws.com,secretsmanager.eu-west-2.amazonaws.com,kms.eu-west-2.amazonaws.com,ecr.eu-west-2.amazonaws.com,.eks.amazonaws.com,.ecr.eu-west-2.amazonaws.com,.s3.eu-west-2.amazonaws.com,.cluster.local,.aws.uk.tsb
            containers:
            - name: "jnlp"
              args: "^${computer.jnlpmac} ^${computer.name}"
              envVars:
              - envVar:
                  key: "JENKINS_URL"
                  value: "http://jenkins.jenkins.svc.cluster.local:8080"
              - envVar:
                  key: "AWS_PROFILE"
                  value: "pre"
              image: "jenkins/inbound-agent"
              workingDir: "/home/jenkins/agent"
              livenessProbe:
                failureThreshold: 0
                initialDelaySeconds: 0
                periodSeconds: 0
                successThreshold: 0
                timeoutSeconds: 0
            - name: "dind"
              args: "cat"
              command: "/bin/sh -c"
              envVars:
              - envVar:
                  key: "JENKINS_URL"
                  value: "http://jenkins.jenkins.svc.cluster.local:8080"
              image: "docker:stable-dind"
              livenessProbe:
                  failureThreshold: 0
                  initialDelaySeconds: 0
                  periodSeconds: 0
                  successThreshold: 0
                  timeoutSeconds: 0
              ttyEnabled: true
              workingDir: "/home/jenkins/agent"

        jnlp-cob: |
          - name: jnlp-cob
            label: tsb-cb
            namespace: cb
            serviceAccount: tsb-cb
            imagePullSecrets:
              - name: "artifactory-user-docker"
            hostNetwork: false
            envVars:
              - envVar:
                  key: http_proxy
                  value: http://eu-west-2.proxy.aws.uk.tsb:3128
              - envVar:
                  key: https_proxy
                  value: http://eu-west-2.proxy.aws.uk.tsb:3128
              - envVar:
                  key: no_proxy
                  value: localhost,127.0.0.1,169.254.169.254,10.0.0.0/8,172.20.0.0/16,.internal,.eu-west-2.elb.amazonaws.com,vault.service.consul,ssm.eu-west-2.amazonaws.com,ssmmessages.eu-west-2.amazonaws.com,ec2.eu-west-2.amazonaws.com,ec2messages.eu-west-2.amazonaws.com,s3.eu-west-2.amazonaws.com,autoscaling.eu-west-2.amazonaws.com,secretsmanager.eu-west-2.amazonaws.com,kms.eu-west-2.amazonaws.com,ecr.eu-west-2.amazonaws.com,.eks.amazonaws.com,.ecr.eu-west-2.amazonaws.com,.s3.eu-west-2.amazonaws.com,.cluster.local,.aws.uk.tsb
            containers:
            - name: "jnlp"
              args: "^${computer.jnlpmac} ^${computer.name}"
              envVars:
              - envVar:
                  key: "JENKINS_URL"
                  value: "http://jenkins.jenkins.svc.cluster.local:8080"
              - envVar:
                  key: "AWS_PROFILE"
                  value: "pre"
              image: "docker.artifactory.mgmt.aws.uk.tsb/cob/jenkins-cicd/jenkins-jnlp-slave:pre-1.11"
              workingDir: "/home/jenkins/agent"
              livenessProbe:
                failureThreshold: 0
                initialDelaySeconds: 0
                periodSeconds: 0
                successThreshold: 0
                timeoutSeconds: 0
            - name: "gradle"
              args: "cat"
              command: "/bin/sh -c"
              envVars:
              - envVar:
                  key: "JENKINS_URL"
                  value: "http://jenkins.jenkins.svc.cluster.local:8080"
              image: "docker.artifactory.mgmt.aws.uk.tsb/cob/jenkins-cicd/gradle:1.0"
              livenessProbe:
                failureThreshold: 0
                initialDelaySeconds: 0
                periodSeconds: 0
                successThreshold: 0
                timeoutSeconds: 0
              ttyEnabled: true
              workingDir: "/home/jenkins/agent"
            - name: "maven"
              args: "cat"
              command: "/bin/sh -c"
              envVars:
              - envVar:
                  key: "JENKINS_URL"
                  value: "http://jenkins.jenkins.svc.cluster.local:8080"
              image: "docker.artifactory.mgmt.aws.uk.tsb/cob/jenkins-cicd/maven:1.1"
              livenessProbe:
                  failureThreshold: 0
                  initialDelaySeconds: 0
                  periodSeconds: 0
                  successThreshold: 0
                  timeoutSeconds: 0
              ttyEnabled: true
              workingDir: "/home/jenkins/agent"
            - name: "dind"
              args: "cat"
              command: "/bin/sh -c"
              envVars:
              - envVar:
                  key: "JENKINS_URL"
                  value: "http://jenkins.jenkins.svc.cluster.local:8080"
              image: "docker:stable-dind"
              livenessProbe:
                  failureThreshold: 0
                  initialDelaySeconds: 0
                  periodSeconds: 0
                  successThreshold: 0
                  timeoutSeconds: 0
              ttyEnabled: true
              workingDir: "/home/jenkins/agent"
            - name: "python"
              args: "cat"
              command: "/bin/sh -c"
              image: "docker.artifactory.mgmt.aws.uk.tsb/cob/jenkins-cicd/python:1.0"
              livenessProbe:
                failureThreshold: 0
                initialDelaySeconds: 0
                periodSeconds: 0
                successThreshold: 0
                timeoutSeconds: 0
              ttyEnabled: true
              workingDir: "/home/jenkins/agent"
              envVars:
              - envVar:
                  key: "JENKINS_URL"
                  value: "http://jenkins.jenkins.svc.cluster.local:8080"
            volumes:
            - secretVolume:
                mountPath: "/home/jenkins/.aws"
                secretName: "aws-cb-pre-config2"
            - secretVolume:
                mountPath: "/home/jenkins/.kube"
                secretName: "k8s-pre-config"
            - emptyDirVolume:
                memory: true
                mountPath: "/home/jenkins/.aws/cli"
            - hostPathVolume:
                hostPath: "/var/run/docker.sock"
                mountPath: "/var/run/docker.sock"
      image: jenkins/inbound-agent
      tag: 4.3-4
      componentName: jenkins-agent
      resources:
        limits:
          memory: 1Gi
      envVars:
        - name: http_proxy
          value: http://eu-west-2.proxy.aws.uk.tsb:3128
        - name: https_proxy
          value: http://eu-west-2.proxy.aws.uk.tsb:3128
        - name: no_proxy
          value: localhost,127.0.0.1,169.254.169.254,10.0.0.0/8,172.20.0.0/16,.internal,.eu-west-2.elb.amazonaws.com,vault.service.consul,ssm.eu-west-2.amazonaws.com,ssmmessages.eu-west-2.amazonaws.com,ec2.eu-west-2.amazonaws.com,ec2messages.eu-west-2.amazonaws.com,s3.eu-west-2.amazonaws.com,autoscaling.eu-west-2.amazonaws.com,secretsmanager.eu-west-2.amazonaws.com,kms.eu-west-2.amazonaws.com,ecr.eu-west-2.amazonaws.com,.eks.amazonaws.com,.ecr.eu-west-2.amazonaws.com,.s3.eu-west-2.amazonaws.com,.cluster.local,.aws.uk.tsb
      yamlTemplate: |-
        apiVersion: v1
        kind: Pod
        spec:
          serviceAccountName: jenkins-agent
          securityContext:
            fsGroup: 1337
    additionalAgents:
      terraform:
        podName: terraform 
        componentName: jenkins-terraform
        yamlTemplate: |-
          apiVersion: v1
          kind: Pod
          spec:
            serviceAccountName: jenkins-terraform
            securityContext:
              fsGroup: 1337
      packer:
        podName: packer
        componentName: jenkins-packer
        yamlTemplate: |-
          apiVersion: v1
          kind: Pod
          spec:
            serviceAccountName: jenkins-packer
            securityContext:
              fsGroup: 1337
      cb:
        podName: cb
        componentName: tsb-cb
        envVars:
          - name: http_proxy
            value: http://eu-west-2.proxy.aws.uk.tsb:3128
          - name: https_proxy
            value: http://eu-west-2.proxy.aws.uk.tsb:3128
          - name: no_proxy
            value: localhost,127.0.0.1,169.254.169.254,10.0.0.0/8,172.20.0.0/16,.internal,.eu-west-2.elb.amazonaws.com,vault.service.consul,ssm.eu-west-2.amazonaws.com,ssmmessages.eu-west-2.amazonaws.com,ec2.eu-west-2.amazonaws.com,ec2messages.eu-west-2.amazonaws.com,s3.eu-west-2.amazonaws.com,autoscaling.eu-west-2.amazonaws.com,secretsmanager.eu-west-2.amazonaws.com,kms.eu-west-2.amazonaws.com,ecr.eu-west-2.amazonaws.com,.eks.amazonaws.com,.ecr.eu-west-2.amazonaws.com,.s3.eu-west-2.amazonaws.com,.cluster.local,.aws.uk.tsb
        yamlTemplate: |-
          apiVersion: v1
          kind: Pod
          metadata:
            namespace: cb
          spec:
            serviceAccountName: tsb-cb
            securityContext:
              runAsUser: 0
              fsGroup: 1337
    persistence:
      enabled: true