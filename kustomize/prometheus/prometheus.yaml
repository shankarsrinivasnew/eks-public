---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: prometheus
spec:
  releaseName: prometheus
  chart:
    repository: https://prometheus-community.github.io/helm-charts
    name: kube-prometheus-stack
    version: 10.3.2
  values:
    ## helm upgrade --install <env> prometheus-community/kube-prometheus-stack -f prom-operator-chart.yaml -f prometheus-rules.yaml
    namespaceOverride: "prometheus"

    ## Using default values from https://github.com/helm/charts/blob/master/stable/grafana/values.yaml
    ##
    grafana:
      enabled: true
      envFromSecret: grafana-mysql-credentials ## Configure RDS Backend. Ensure Secret named grafana-mysql-credentials is created prior to runninng this.
      # env:
      #   http_proxy: http://eu-west-2.proxy.aws.uk.tsb:3128
      #   https_proxy: http://eu-west-2.proxy.aws.uk.tsb:3128
      #   no_proxy: localhost,127.0.0.1,169.254.169.254,10.0.0.0/8,172.20.0.0/16,.internal,.eu-west-2.elb.amazonaws.com,vault.service.consul,ssm.eu-west-2.amazonaws.com,ssmmessages.eu-west-2.amazonaws.com,ec2.eu-west-2.amazonaws.com,ec2messages.eu-west-2.amazonaws.com,s3.eu-west-2.amazonaws.com,autoscaling.eu-west-2.amazonaws.com,secretsmanager.eu-west-2.amazonaws.com,kms.eu-west-2.amazonaws.com,ecr.eu-west-2.amazonaws.com,.eks.amazonaws.com,.ecr.eu-west-2.amazonaws.com,.s3.eu-west-2.amazonaws.com,.cluster.local,.aws.uk.tsb
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: alb
          alb.ingress.kubernetes.io/scheme: internal
          alb.ingress.kubernetes.io/target-type: ip
          alb.ingress.kubernetes.io/inbound-cidrs: "{{ VPC_CIDR }},10.161.48.0/20,10.198.165.58/32"
          alb.ingress.kubernetes.io/success-codes: 200,301,302
          external-dns.alpha.kubernetes.io/hostname: grafana.{{ DNS_ZONE }}
          alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
          alb.ingress.kubernetes.io/backend-protocol: HTTP
        hosts:
          - grafana.{{ DNS_ZONE }}
        path: /*
      sidecar:
        datasources:
          defaultDatasourceEnabled: false
      datasources:
        datasources.yaml:
          apiVersion: 1
          datasources:
          - name: Thanos
            type: prometheus
            url: http://thanos-query-http.prometheus:10902 #Thanos must be deployed first for this to work.
            access: proxy
            isDefault: true
      # plugins:
      #   - "grafana-piechart-panel"
      #   - "camptocamp-prometheus-alertmanager-datasource"
      #   - "praj-ams-datasource"
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: 'cop-dashboard-jvm'
            orgId: 1
            folder: 'TSB-COP'
            type: file
            disableDeletion: true
            editable: false
            options:
              path: /var/lib/grafana/dashboards/cop-dashboard-jvm
          - name: 'cop-dashboard-scylla-00'
            orgId: 1
            folder: 'TSB-COP'
            type: file
            disableDeletion: true
            editable: false
            options:
              path: /var/lib/grafana/dashboards/cop-dashboard-scylla-00
          - name: 'cop-dashboard-scylla-01'
            orgId: 1
            folder: 'TSB-COP'
            type: file
            disableDeletion: true
            editable: false
            options:
              path: /var/lib/grafana/dashboards/cop-dashboard-scylla-01
          - name: 'cop-dashboard-kafka'
            orgId: 1
            folder: 'TSB-COP'
            type: file
            disableDeletion: true
            editable: false
            options:
              path: /var/lib/grafana/dashboards/cop-dashboard-kafka
          - name: 'cop-dashboard-consul-vault'
            orgId: 1
            folder: 'TSB-COP'
            type: file
            disableDeletion: true
            editable: false
            options:
              path: /var/lib/grafana/dashboards/cop-dashboard-consul-vault

      dashboardsConfigMaps:
        cop-dashboard-jvm: cop-jvm-cm
        cop-dashboard-scylla-00: cop-scylla00-cm
        cop-dashboard-scylla-01: cop-scylla01-cm
        cop-dashboard-kafka: cop-kafka-cm
        cop-dashboard-consul-vault: cop-consul-vault-cm

    prometheusOperator:
      enabled: true
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 50m
          memory: 50Mi

      # Required for use in managed kubernetes clusters (such as AWS EKS) with custom CNI (such as calico),
      # because control-plane managed by AWS cannot communicate with pods' IP CIDR and admission webhooks are not working
      ##
      hostNetwork: false

    ## Component scraping the kube controller manager
    ##
    kubeControllerManager:
      enabled: false
    ## Component scraping kube scheduler
    ##
    kubeScheduler:
      enabled: false
    ## Component scraping kube proxy
    ##
    kubeProxy:
      enabled: false

    ## Deploy a Prometheus instance
    ##
    prometheus:
      enabled: true
      serviceAccount:
        create: true
        name: prometheus-sa
        annotations:
          eks.amazonaws.com/role-arn: arn:aws:iam::{{ AWS_ACCOUNT }}:role/eks/prometheus-thanos-s3
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: alb
          alb.ingress.kubernetes.io/scheme: internal
          alb.ingress.kubernetes.io/target-type: ip
          alb.ingress.kubernetes.io/inbound-cidrs: "{{ VPC_CIDR }},10.161.48.0/20,10.198.165.58/32"
          alb.ingress.kubernetes.io/success-codes: 200,301,302
          alb.ingress.kubernetes.io/backend-protocol: HTTP
          alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
          external-dns.alpha.kubernetes.io/hostname: prometheus.{{ DNS_ZONE }}
        hosts:
          - prometheus.{{ DNS_ZONE }}
        paths:
          - /*

      ## Settings affecting prometheusSpec
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
      ##
      prometheusSpec:
        containers:
          - name: prometheus
            env:
              - name: http_proxy
                value: http://eu-west-2.proxy.aws.uk.tsb:3128
              - name: https_proxy
                value: http://eu-west-2.proxy.aws.uk.tsb:3128
              - name: no_proxy
                value: localhost,127.0.0.1,169.254.169.254,10.0.0.0/8,172.20.0.0/16,.internal,.eu-west-2.elb.amazonaws.com,vault.service.consul,ssm.eu-west-2.amazonaws.com,ssmmessages.eu-west-2.amazonaws.com,ec2.eu-west-2.amazonaws.com,ec2messages.eu-west-2.amazonaws.com,s3.eu-west-2.amazonaws.com,autoscaling.eu-west-2.amazonaws.com,secretsmanager.eu-west-2.amazonaws.com,kms.eu-west-2.amazonaws.com,ecr.eu-west-2.amazonaws.com,.eks.amazonaws.com,.ecr.eu-west-2.amazonaws.com,.s3.eu-west-2.amazonaws.com,.cluster.local,.aws.uk.tsb
        podMetadata:
          annotations:
            iam.amazonaws.com/role: arn:aws:iam::{{ AWS_ACCOUNT }}:role/eks/prometheus-thanos-s3
        retention: 6h
        disableCompaction: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              volumeName: prometheus-data #ENSURE PV created before running this ref: storage.yaml
              accessModes:
                - ReadWriteMany
              storageClassName: efs-sc
              resources:
                requests:
                  storage: 20Gi
              selector:
                matchLabels:
                  prometheus: "data"
        additionalScrapeConfigs:
          - job_name: prometheus
            static_configs:
              - targets:
                - localhost:9090
          - job_name: alertmanager
            static_configs:
              - targets:
                - prometheus-kube-prometheus-alertmanager.prometheus:9093
          - job_name: ec2-discover-node-exporter
            ec2_sd_configs:
              - region: eu-west-2
                port: 9100
            relabel_configs:
              - source_labels: [__meta_ec2_private_ip]
                target_label: privateip
              - source_labels: [__meta_ec2_instance_id]
                target_label: instanceid
              - source_labels: [__meta_ec2_tag_ManagedBy]
                target_label: managedby
                regex: rackspace
                action: keep
              - source_labels: [__meta_ec2_tag_Name]
                target_label: instance
              - source_labels: [__meta_ec2_tag_Environment]
                target_label: environment
              - source_labels: [__meta_ec2_availability_zone]
                target_label: availabilityzone
              - source_labels: [__meta_ec2_instance_state]
                target_label: status
              - source_labels: [__meta_ec2_instance_type]
                target_label: instancetype
              - source_labels: [__meta_ec2_tag_subsystem]
                target_label: subsystem
          - job_name: ec2-discover-hdf-jmx
            ec2_sd_configs:
              - region: eu-west-2
                port: 9110
            relabel_configs:
              - source_labels: [__meta_ec2_private_ip]
                target_label: privateip
              - source_labels: [__meta_ec2_instance_id]
                target_label: instanceid
              - source_labels: [__meta_ec2_tag_ManagedBy]
                target_label: managedby
                regex: rackspace
                action: keep
              - source_labels: [__meta_ec2_tag_Name]
                regex: .*hdf.*
                action: keep
              - source_labels: [__meta_ec2_tag_Name]
                action: replace
                target_label: instancename
              - source_labels: [__meta_ec2_tag_Environment]
                target_label: environment
              - source_labels: [__meta_ec2_availability_zone]
                target_label: availabilityzone
              - source_labels: [__meta_ec2_instance_state]
                target_label: status
              - source_labels: [__meta_ec2_instance_type]
                target_label: instancetype
          - job_name: ec2-discover-scylla-default
            ec2_sd_configs:
              - region: eu-west-2
                port: 9180
            relabel_configs:
              - source_labels: [__meta_ec2_private_ip]
                target_label: privateip
              - source_labels: [__meta_ec2_instance_id]
                target_label: instanceid
              - source_labels: [__meta_ec2_tag_ManagedBy]
                target_label: managedby
                regex: rackspace
                action: keep
              - source_labels: [__meta_ec2_tag_Name]
                regex: .*scylla.*
                action: keep
              - source_labels: [__meta_ec2_tag_Name]
                action: replace
                target_label: instancename
              - source_labels: [__meta_ec2_tag_Environment]
                target_label: environment
              - source_labels: [__meta_ec2_availability_zone]
                target_label: availabilityzone
              - source_labels: [__meta_ec2_instance_state]
                target_label: status
              - source_labels: [__meta_ec2_instance_type]
                target_label: instancetype
          - job_name: 'blackbox'
            metrics_path: /probe
            params:
              module: [http_2xx_cacert]
            static_configs:
              - targets:
                - https://grafana.{{ DNS_ZONE }}
                - https://prometheus.{{ DNS_ZONE }}
                - https://ambari.hdf.{{ DNS_ZONE }}
                - https://consul.{{ DNS_ZONE }}
                - https://vault.{{ DNS_ZONE }}
            relabel_configs:
              - source_labels: [__address__]
                target_label: __param_target
              - source_labels: [__param_target]
                target_label: instance
              - target_label: __address__
                replacement: blackbox-exporter-prometheus-blackbox-exporter.prometheus:9115
          - job_name: 'blackbox_4xx'
            metrics_path: /probe
            params:
              module: [http_4xx_cacert]
            static_configs:
              - targets:
                - https://jenkins.{{ DNS_ZONE }}
            relabel_configs:
              - source_labels: [__address__]
                target_label: __param_target
              - source_labels: [__param_target]
                target_label: instance
              - target_label: __address__
                replacement: blackbox-exporter-prometheus-blackbox-exporter.prometheus:9115
          - job_name: consul-exporter
            metrics_path: /metrics
            static_configs:
              - targets:
                - consul-exporter-prometheus-consul-exporter:9107
          - job_name: cloudwatch-exporter
            metrics_path: '/metrics'
            honor_labels: true
            static_configs:
            - targets: 
              - cloudwatch-exporter-prometheus-cloudwatch-exporter:9106

        ## If true, a nil or {} value for prometheus.prometheusSpec.serviceMonitorSelector will cause the
        ## prometheus resource to be created with selectors based on values in the helm deployment,
        ## which will also match the servicemonitors created
        ##
        serviceMonitorSelectorNilUsesHelmValues: false
        ## If true, a nil or {} value for prometheus.prometheusSpec.ruleSelector will cause the
        ## prometheus resource to be created with selectors based on values in the helm deployment,
        ## which will also match the PrometheusRule resources created
        ##
        ruleSelectorNilUsesHelmValues: false
        #ruleSelector:
        #   matchLabels:
        #     app: kube-prometheus-stack
        #     release: prod

        ## Thanos configuration allows configuring various aspects of a Prometheus server in a Thanos environment.
        ## This section is experimental, it may change significantly without deprecation notice in any release.
        ## This is experimental and may change significantly without backward compatibility in any release.
        ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#thanosspec
        ##
        thanos:
          image: quay.io/thanos/thanos:v0.15.0
          version: v0.15.0
          objectStorageConfig:
            name: thanos-s3-config
            key: object-store.yaml

    ## Configuration for alertmanager
    ##
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        #inhibit_rules:
        #  - source_match:
        #      severity: 'critical'
        #    target_match:
        #      severity: 'warning'
        #    equal: ['alertname', 'dev', 'instance']
        receivers:
          - name: rax-monitoring-email
            webhook_configs:
            - url: "http://alertmanager-sns-forwarder-svc:9087/alert/preprod-rax-alertmanager"
              send_resolved: true
          - name: "sns-forwarder-cbalerts"
            webhook_configs:
            - url: "http://alertmanager-sns-forwarder-svc:9087/alert/CB-alerts"
              send_resolved: true
          - name: 'cb-slack-notifications'
            slack_configs:
            - channel: '#cb_alert_notifications'
              api_url: 'https://hooks.slack.com/services/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'
              icon_url: 'https://github.com/prometheus/docs/raw/master/static/prometheus_logo.png'
              title: |-
                [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}
                {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
                  {{" "}}(
                  {{- with .CommonLabels.Remove .GroupLabels.Names }}
                    {{- range $index, $label := .SortedPairs -}}
                      {{ if $index }}, {{ end }}
                      {{- $label.Name }}="{{ $label.Value -}}"
                    {{- end }}
                  {{- end -}}
                  )
                {{- end }}
              text: >-
                {{ range .Alerts -}}
                *Alert:* {{ .Annotations.summary }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}
                *Description:* {{ .Annotations.description }}
                {{ end }}
              send_resolved: true
              http_config:
                proxy_url: "http://eu-west-2.proxy.aws.uk.tsb:3128"

        route:
          group_by: ['...']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 1m
          receiver: "null"
          routes:
            - match:
                namespace: cb
                environment: prod
              receiver: sns-forwarder-cbalerts
              continue: true
            - match:
                namespace: cb
                environment: prod
              receiver: cb-slack-notifications
              continue: true
            - match:
                monitoring: endpoints
              receiver: rax-monitoring-email
              continue: true

    additionalPrometheusRulesMap:
      rackspace-rules:
        groups:
        - name: BLACKBOX_ENDPOINT_MONITORING_RULES
          rules:
          - alert: probe_http_4xx_status_code
            expr: (probe_http_status_code{job="blackbox_4xx"}) == 403
            for: 1m
            labels:
              severity: low
              monitoring: endpoints
            annotations:
              summary: "Endpoint {{ $labels.instance }} healthy"

          - alert: probe_http_2xx_status_code
            expr: (probe_http_status_code{job="blackbox"}) == 200
            for: 1m
            labels:
              severity: low
              monitoring: endpoints
            annotations:
              summary: "Endpoint {{ $labels.instance }} healthy"

      tsb-cb-down-alerts-rules:
        groups:
        -   name: CB_APPS_DOWN_STATE

        ###########################################CB_APP_DOWN_WARNING##########################################################
            rules:
            -   record: cb_app_down_warning_{{ AWS_ENVIRONMENT }}
                expr: (kube_deployment_status_replicas_available{deployment=~"tsb-cb-ads-customer-lookup-topology|tsb-cb-authentication-api|tsb-cb-cdc-customer-data|tsb-cb-enrich|tsb-cb-fulfill|tsb-cb-hmac-generation-topology|tsb-cb-nlp-handler|tsb-cb-spring-api-gateway",namespace="cb"})

            -   alert: CB_app_down_warning_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_app_down_warning_{{ AWS_ENVIRONMENT }}) < 3
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: WARNING
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: '{{ $labels.deployment }} of job {{ $labels.job }} has less than 3 pods for more than 1 min. Value:{{ $value }}'
                    summary: Warning Alert deployment {{ $labels.deployment }} of job {{ $labels.job }} has less than 3 pods running

        ###########################################CB_APP_DOWN_CRITICAL##########################################################

            -   record: cb_app_down_critical_{{ AWS_ENVIRONMENT }}
                expr: (kube_deployment_status_replicas_available{deployment=~".*tsb-cb.*",namespace="cb"})

            -   alert: CB_app_down_critical_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_app_down_critical_{{ AWS_ENVIRONMENT }}) < 1
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: CRITICAL
                    platform: AWS
                    namespace: cb
                    severity: CRITICAL
                    type: 8x5
                annotations:
                    description: '{{ $labels.deployment }} of job {{ $labels.job }} has no pods running. Value:{{ $value }}'
                    summary: Critical deployment {{ $labels.deployment }} of job {{ $labels.job }} has no pods running


      tsb-cb-responsetime-alerts-rules:
        groups:
        -   name: CB_APP_RESPONSE_TIME

            rules:
            -   record: cb_app_auth_response_time_{{ AWS_ENVIRONMENT }}
                expr: sum by (namespace, job)(rate(http_server_requests_seconds_sum {namespace="cb",uri=~".*enrol.*|.*verify.*"}[5m]))/ sum by (namespace, job)(rate(http_server_requests_seconds_count{namespace="cb",uri=~".*enrol.*|.*verify.*"}[5m]))

            -   alert: CB_app_auth_response_time_green_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_app_auth_response_time_{{ AWS_ENVIRONMENT }}) > 1
                for: 5m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: GREEN
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} response time is more than 1s for last 5 mins. Value: {{ $value }}'
                    summary: Green alert for reponse time reached for Application {{ $labels.job }}

            -   alert: CB_app_auth_response_time_yellow_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_app_auth_response_time_{{ AWS_ENVIRONMENT }}) > 1.5
                for: 5m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: YELLOW
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} response time is more than 1.5s for last 5 mins. Value: {{ $value }}'
                    summary: Yellow alert for reponse time reached for Application {{ $labels.job }}

            -   alert: CB_app_auth_response_time_red_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_app_auth_response_time_{{ AWS_ENVIRONMENT }}) > 2
                for: 5m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: RED
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} response time is more than 2s for last 5 mins. Value: {{ $value }}'
                    summary: Red alert for reponse time reached for Application {{ $labels.job }}

      tsb-cb-up-alerts-rules:
        groups:
        -   name: CB_APPS_UP_STATE

        ###########################################CB_AUTH_VERIFY##########################################################
            rules:
            -   record: cb_authentication_verify_up_{{ AWS_ENVIRONMENT }}
                expr: (sum by (job, namespace, uri) (rate(http_server_requests_seconds_count {namespace="cb",uri=~".*verify.*"}[5m]))*60)

            -   alert: CB_authentication_verify_up_green_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_authentication_verify_up_{{ AWS_ENVIRONMENT }}) > 7
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: GREEN
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.uri}} has reached peak rate of 7 in 1 min. Value: {{ $value }}'
                    summary: Green rate reached for Application {{ $labels.job }} Endpoint {{$labels.uri}}

            -   alert: CB_authentication_verify_up_yellow_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_authentication_verify_up_{{ AWS_ENVIRONMENT }}) > 15
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: YELLOW
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.uri}} has reached peak rate of 15 in 1 min. Value: {{ $value }}'
                    summary: Yellow rate reached for Application {{ $labels.job }} Endpoint {{$labels.uri}}

            -   alert: CB_authentication_verify_up_red_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_authentication_verify_up_{{ AWS_ENVIRONMENT }}) > 150
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: RED
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.uri}} has reached peak rate of 150 in 1 min. Value: {{ $value }}'
                    summary: Red rate reached for Application {{ $labels.job }} Endpoint {{$labels.uri}}

            -   alert: CB_authentication_verify_up_critical_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_authentication_verify_up_{{ AWS_ENVIRONMENT }}) > 150
                for: 5m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: CRITICAL
                    platform: AWS
                    namespace: cb
                    severity: CRITICAL
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.uri}} is at peak rate of 150 for last 5 mins. Value: {{ $value }}'
                    summary: Critical Alert for Application {{ $labels.job }} Endpoint {{$labels.uri}}

        ###########################################CB_AUTH_ENROL##########################################################

            -   record: cb_authentication_enrol_up_{{ AWS_ENVIRONMENT }}
                expr: (sum by (job, namespace, uri) (rate(http_server_requests_seconds_count {namespace="cb",uri=~".*enrol.*"}[5m]))*60)

            -   alert: CB_authentication_enrol_up_green_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_authentication_enrol_up_{{ AWS_ENVIRONMENT }}) > 900
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: GREEN
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.uri}} has reached peak rate of 900 in 1 min. Value: {{ $value }}'
                    summary: Green rate reached for Application {{ $labels.job }} Endpoint {{$labels.uri}}

            -   alert: CB_authentication_enrol_up_yellow_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_authentication_enrol_up_{{ AWS_ENVIRONMENT }}) > 1320
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: YELLOW
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.uri}} has reached peak rate of 1320 in 1 min. Value: {{ $value }}'
                    summary: Yellow rate reached for Application {{ $labels.job }} Endpoint {{$labels.uri}}

            -   alert: CB_authentication_enrol_up_red_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_authentication_enrol_up_{{ AWS_ENVIRONMENT }}) > 3364
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: RED
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.uri}} has reached peak rate of 3364 in 1 min. Value: {{ $value }}'
                    summary: Red rate reached for Application {{ $labels.job }} Endpoint {{$labels.uri}}

            -   alert: CB_authentication_enrol_up_critical_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_authentication_enrol_up_{{ AWS_ENVIRONMENT }}) > 3364
                for: 5m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: CRITICAL
                    platform: AWS
                    namespace: cb
                    severity: CRITICAL
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.uri}} is at peak rate of 3364 for last 5 mins. Value: {{ $value }}'
                    summary: Critical Alert for Application {{ $labels.job }} Endpoint {{$labels.uri}}

        ###########################################CB_CDC_CUSTOMER_DATA##########################################################

            -   record: cb_cdc_customer_data_up_{{ AWS_ENVIRONMENT }}
                expr: (sum by (job, namespace) (processHmacsStream_applicationId_consumer_fetch_manager_metrics_records_consumed_rate {namespace="cb"})*60)

            -   alert: CB_cdc_customer_data_up_green_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_cdc_customer_data_up_{{ AWS_ENVIRONMENT }}) > 15
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: GREEN
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 15 in 1 min. Value: {{ $value }}'
                    summary: Green rate reached for Application {{ $labels.job }}

            -   alert: CB_cdc_customer_data_up_yellow_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_cdc_customer_data_up_{{ AWS_ENVIRONMENT }}) > 30
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: YELLOW
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 30 in 1 min. Value: {{ $value }}'
                    summary: Yellow rate reached for Application {{ $labels.job }}

            -   alert: CB_cdc_customer_data_up_red_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_cdc_customer_data_up_{{ AWS_ENVIRONMENT }}) > 300
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: RED
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 300 in 1 min. Value: {{ $value }}'
                    summary: Red rate reached for Application {{ $labels.job }}

            -   alert: CB_cdc_customer_data_up_critical_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_cdc_customer_data_up_{{ AWS_ENVIRONMENT }}) > 300
                for: 5m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: CRITICAL
                    platform: AWS
                    namespace: cb
                    severity: CRITICAL
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} is at peak rate of 300 for last 5 mins. Value: {{ $value }}'
                    summary: Critical Alert for Application {{ $labels.job }}

        ###########################################CB_ENRICH_SUB_TOPOLOGY###########################################################

            -   record: cb_enrich_up_{{ AWS_ENVIRONMENT }}
                expr: (sum by (job, namespace) (consumer_fetch_manager_metrics_records_consumed_rate {namespace="cb",job="tsb-cb-enrich"})*60)

            -   alert: CB_enrich_up_green_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_enrich_up_{{ AWS_ENVIRONMENT }}) > 7
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: GREEN
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 7 in 1 min. Value: {{ $value }}'
                    summary: Green rate reached for Application {{ $labels.job }}

            -   alert: CB_enrich_up_yellow_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_enrich_up_{{ AWS_ENVIRONMENT }}) > 15
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: YELLOW
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 15 in 1 min. Value: {{ $value }}'
                    summary: Yellow rate reached for Application {{ $labels.job }}

            -   alert: CB_enrich_up_red_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_enrich_up_{{ AWS_ENVIRONMENT }}) > 150
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: RED
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 150 in 1 min. Value: {{ $value }}'
                    summary: Red rate reached for Application {{ $labels.job }}

            -   alert: CB_enrich_up_critical_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_enrich_up_{{ AWS_ENVIRONMENT }}) > 150
                for: 5m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: CRITICAL
                    platform: AWS
                    namespace: cb
                    severity: CRITICAL
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} is at peak rate of 150 for last 5 mins. Value: {{ $value }}'
                    summary: Critical Alert for Application {{ $labels.job }}

        ###########################################CB_FULFILL_SUB_TOPOLOGY###########################################################

            -   record: cb_fulfill_up_{{ AWS_ENVIRONMENT }}
                expr: (sum by (job, namespace) (consumer_fetch_manager_metrics_records_consumed_rate {namespace="cb",job="tsb-cb-fulfill"})*60)

            -   alert: CB_fulfill_up_green_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_fulfill_up_{{ AWS_ENVIRONMENT }}) > 7
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: GREEN
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 7 in 1 min. Value: {{ $value }}'
                    summary: Green rate reached for Application {{ $labels.job }}

            -   alert: CB_fulfill_up_yellow_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_fulfill_up_{{ AWS_ENVIRONMENT }}) > 15
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: YELLOW
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 15 in 1 min. Value: {{ $value }}'
                    summary: Yellow rate reached for Application {{ $labels.job }}

            -   alert: CB_fulfill_up_red_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_fulfill_up_{{ AWS_ENVIRONMENT }}) > 150
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: RED
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 150 in 1 min. Value: {{ $value }}'
                    summary: Red rate reached for Application {{ $labels.job }}

            -   alert: CB_fulfill_up_critical_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_fulfill_up_{{ AWS_ENVIRONMENT }}) > 150
                for: 5m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: CRITICAL
                    platform: AWS
                    namespace: cb
                    severity: CRITICAL
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} is at peak rate of 150 for last 5 mins. Value: {{ $value }}'
                    summary: Critical Alert for Application {{ $labels.job }}

        ###########################################CB_HMAC_GENERATION_TOPOLOGY###########################################################

            -   record: cb_hmac_generation_topology_up_{{ AWS_ENVIRONMENT }}
                expr: (sum by (job, namespace) (processHmacGenerationRequest_applicationId_consumer_fetch_manager_metrics_records_consumed_rate {namespace="cb"})*60)

            -   alert: CB_hmac_generation_topology_up_green_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_hmac_generation_topology_up_{{ AWS_ENVIRONMENT }}) > 900
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: GREEN
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 900 in 1 min. Value: {{ $value }}'
                    summary: Green rate reached for Application {{ $labels.job }}

            -   alert: CB_hmac_generation_topology_up_yellow_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_hmac_generation_topology_up_{{ AWS_ENVIRONMENT }}) > 1320
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: YELLOW
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 1320 in 1 min. Value: {{ $value }}'
                    summary: Yellow rate reached for Application {{ $labels.job }}

            -   alert: CB_hmac_generation_topology_up_red_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_hmac_generation_topology_up_{{ AWS_ENVIRONMENT }}) > 3364
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: RED
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 3364 in 1 min. Value: {{ $value }}'
                    summary: Red rate reached for Application {{ $labels.job }}

            -   alert: CB_hmac_generation_topology_up_critical_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_hmac_generation_topology_up_{{ AWS_ENVIRONMENT }}) > 3364
                for: 5m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: CRITICAL
                    platform: AWS
                    namespace: cb
                    severity: CRITICAL
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} is at peak rate of 3364 for last 5 mins. Value: {{ $value }}'
                    summary: Critical Alert for Application {{ $labels.job }}

        ###########################################CB_LIVE_PERSON_ADAPTER###########################################################

            -   record: cb_lp_adapter_up_{{ AWS_ENVIRONMENT }}
                expr: (sum by (job, namespace) (rate(lp_adapter_rdkafka_topic_partition_msgs {namespace="cb"}[5m]))*60)

            -   alert: CB_lp_adapter_up_green_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_lp_adapter_up_{{ AWS_ENVIRONMENT }}) > 7
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: GREEN
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 7 in 1 min. Value: {{ $value }}'
                    summary: Green rate reached for Application {{ $labels.job }}

            -   alert: CB_lp_adapter_up_yellow_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_lp_adapter_up_{{ AWS_ENVIRONMENT }}) > 15
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: YELLOW
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 15 in 1 min. Value: {{ $value }}'
                    summary: Yellow rate reached for Application {{ $labels.job }}

            -   alert: CB_lp_adapter_up_red_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_lp_adapter_up_{{ AWS_ENVIRONMENT }}) > 150
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: RED
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 150 in 1 min. Value: {{ $value }}'
                    summary: Red rate reached for Application {{ $labels.job }}

            -   alert: CB_lp_adapter_up_critical_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_lp_adapter_up_{{ AWS_ENVIRONMENT }}) > 150
                for: 5m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: CRITICAL
                    platform: AWS
                    namespace: cb
                    severity: CRITICAL
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} is at peak rate of 150 for last 5 mins. Value: {{ $value }}'
                    summary: Critical Alert for Application {{ $labels.job }}

        ###########################################CB_NATURAL_LANGUAGE_PROCESS_HANDLER###########################################################

            -   record: cb_nlp_handler_up_{{ AWS_ENVIRONMENT }}
                expr: (sum by (job, namespace) (rate(spring_kafka_listener_seconds_count {namespace="cb"}[5m]))*60)

            -   alert: CB_nlp_handler_up_green_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_nlp_handler_up_{{ AWS_ENVIRONMENT }}) > 7
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: GREEN
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 7 in 1 min. Value: {{ $value }}'
                    summary: Green rate reached for Application {{ $labels.job }}

            -   alert: CB_nlp_handler_up_yellow_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_nlp_handler_up_{{ AWS_ENVIRONMENT }}) > 15
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: YELLOW
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 15 in 1 min. Value: {{ $value }}'
                    summary: Yellow rate reached for Application {{ $labels.job }}

            -   alert: CB_nlp_handler_up_red_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_nlp_handler_up_{{ AWS_ENVIRONMENT }}) > 150
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: RED
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 150 in 1 min. Value: {{ $value }}'
                    summary: Red rate reached for Application {{ $labels.job }}

            -   alert: CB_nlp_handler_up_critical_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_nlp_handler_up_{{ AWS_ENVIRONMENT }}) > 150
                for: 5m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: CRITICAL
                    platform: AWS
                    namespace: cb
                    severity: CRITICAL
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} is at peak rate of 150 for last 5 mins. Value: {{ $value }}'
                    summary: Critical Alert for Application {{ $labels.job }}

        ###########################################CB_SPRING_CLOUD_API_GW_VERIFY###########################################################

            -   record: cb_spring_api_gateway_verify_up_{{ AWS_ENVIRONMENT }}
                expr: (sum by (job, namespace, routeId)(rate(gateway_requests_seconds_count{ namespace="cb", routeId=~".*verify.*"}[5m]))*60)

            -   alert: CB_spring_api_gateway_verify_up_green_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_spring_api_gateway_verify_up_{{ AWS_ENVIRONMENT }}) > 7
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: GREEN
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.routeId}} has reached peak rate of 7 in 1 min. Value: {{ $value }}'
                    summary: Green rate reached for Application {{ $labels.job }} Endpoint {{$labels.routeId}}

            -   alert: CB_spring_api_gateway_verify_up_yellow_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_spring_api_gateway_verify_up_{{ AWS_ENVIRONMENT }}) > 15
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: YELLOW
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.routeId}} has reached peak rate of 15 in 1 min. Value: {{ $value }}'
                    summary: Yellow rate reached for Application {{ $labels.job }} Endpoint {{$labels.routeId}}

            -   alert: CB_spring_api_gateway_verify_up_red_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_spring_api_gateway_verify_up_{{ AWS_ENVIRONMENT }}) > 150
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: RED
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.routeId}} has reached peak rate of 150 in 1 min. Value: {{ $value }}'
                    summary: Red rate reached for Application {{ $labels.job }} Endpoint {{$labels.routeId}}

            -   alert: CB_spring_api_gateway_verify_up_critical_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_spring_api_gateway_verify_up_{{ AWS_ENVIRONMENT }}) > 150
                for: 5m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: CRITICAL
                    platform: AWS
                    namespace: cb
                    severity: CRITICAL
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.routeId}} is at peak rate of 150 for last 5 mins. Value: {{ $value }}'
                    summary: Critical Alert for Application {{ $labels.job }} Endpoint {{$labels.routeId}}

        ###########################################CB_SPRING_CLOUD_API_GW_ENROL###########################################################

            -   record: cb_spring_api_gateway_enrol_up_{{ AWS_ENVIRONMENT }}
                expr: (sum by (job, namespace, routeId)(rate(gateway_requests_seconds_count{ namespace="cb", routeId=~".*enrol.*"}[5m]))*60)

            -   alert: CB_spring_api_gateway_enrol_up_green_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_spring_api_gateway_enrol_up_{{ AWS_ENVIRONMENT }}) > 900
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: GREEN
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.routeId}} has reached peak rate of 900 in 1 min. Value: {{ $value }}'
                    summary: Green rate reached for Application {{ $labels.job }} Endpoint {{$labels.routeId}}

            -   alert: CB_spring_api_gateway_enrol_up_yellow_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_spring_api_gateway_enrol_up_{{ AWS_ENVIRONMENT }}) > 1320
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: YELLOW
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.routeId}} has reached peak rate of 1320 in 1 min. Value: {{ $value }}'
                    summary: Yellow rate reached for Application {{ $labels.job }} Endpoint {{$labels.routeId}}

            -   alert: CB_spring_api_gateway_enrol_up_red_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_spring_api_gateway_enrol_up_{{ AWS_ENVIRONMENT }}) > 3364
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: RED
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.routeId}} has reached peak rate of 3364 in 1 min. Value: {{ $value }}'
                    summary: Red rate reached for Application {{ $labels.job }} Endpoint {{$labels.routeId}}

            -   alert: CB_spring_api_gateway_enrol_up_critical_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_spring_api_gateway_enrol_up_{{ AWS_ENVIRONMENT }}) > 3364
                for: 5m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: CRITICAL
                    platform: AWS
                    namespace: cb
                    severity: CRITICAL
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} Endpoint {{$labels.routeId}} is at peak rate of 3364 for last 5 mins. Value: {{ $value }}'
                    summary: Critical Alert for Application {{ $labels.job }} Endpoint {{$labels.routeId}}

        ###########################################CB_ADS_CUSTOMER_LOOKUP_TOPOLOGY###########################################################

            -   record: cb_ads_customer_lookup_up_{{ AWS_ENVIRONMENT }}
                expr: (sum by (job, namespace) (tsb_cb_ads_customer_lookup_topology_consumer_fetch_manager_metrics_records_consumed_rate or processCustomerLookupByUserId_applicationId_consumer_fetch_manager_metrics_records_consumed_rate)*60)

            -   alert: CB_ads_customer_lookup_up_green_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_ads_customer_lookup_up_{{ AWS_ENVIRONMENT }}) > 15
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: GREEN
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 15 in 1 min. Value: {{ $value }}'
                    summary: Green rate reached for Application {{ $labels.job }}

            -   alert: CB_ads_customer_lookup_up_yellow_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_ads_customer_lookup_up_{{ AWS_ENVIRONMENT }}) > 30
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: YELLOW
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 30 in 1 min. Value: {{ $value }}'
                    summary: Yellow rate reached for Application {{ $labels.job }}

            -   alert: CB_ads_customer_lookup_up_red_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_ads_customer_lookup_up_{{ AWS_ENVIRONMENT }}) > 300
                for: 1m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: RED
                    platform: AWS
                    namespace: cb
                    severity: WARNING
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} has reached peak rate of 300 in 1 min. Value: {{ $value }}'
                    summary: Red rate reached for Application {{ $labels.job }}

            -   alert: CB_ads_customer_lookup_up_critical_alert_{{ AWS_ENVIRONMENT }}
                expr: (cb_ads_customer_lookup_up_{{ AWS_ENVIRONMENT }}) > 300
                for: 5m
                labels:
                    action: NO LLAMAR A GUARDIA
                    environment: "{{ AWS_ENVIRONMENT }}"
                    group: INFRA
                    level: CRITICAL
                    platform: AWS
                    namespace: cb
                    severity: CRITICAL
                    type: 8x5
                annotations:
                    description: 'Application {{ $labels.job }} is at peak rate of 300 for last 5 mins. Value: {{ $value }}'
                    summary: Critical Alert for Application {{ $labels.job }}
